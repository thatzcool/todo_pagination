<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">



<!-- com.ssg.todoService/mapper/Mapper인터페이스와 동일한 이름지정 하며 이름지정시 대소문자 일치 확인 필! -->
<mapper namespace="com.ssg.todoservice.mapper.TodoMapper">
    <sql id="search">
        <where>
            <!-- keyword 있을 때만 LIKE 생성 -->
            <if test="keyword != null and keyword != '' and types != null and types.size > 0">
                <bind name="kw" value="'%' + keyword + '%'"/>
                <trim prefix="(" suffix=")" suffixOverrides="OR">
                    <foreach collection="types" item="type">
                        <choose>
                            <when test="type == 't'"> title LIKE #{kw} OR </when>
                            <when test="type == 'w'"> writer LIKE #{kw} OR </when>
                        </choose>
                    </foreach>
                </trim>
            </if>

            <if test="finished != null and finished">
                AND finished = TRUE
            </if>

            <if test="from != null and to != null">
                AND dueDate BETWEEN #{from} AND #{to}
            </if>
        </where>
    </sql>


    <!--  select id는 현재 TodoMapper 인터페이스와  정의된 메서드명 -->
    <!--  resultType 속성값으로는 mapper 인터페이스의 메서드의 반환 타입을 지정(소문자 사용)  -->
    <select id="getTime" resultType="string">
        select now()
    </select>

    <select id="selectAll" resultType="com.ssg.todoservice.domain.TodoVO">
        <!--         MyBatis는 기본적으로 getXXX, setXXX 를 통해서 동작하므로 , #{skip}는 PageRequestDTO의 getSkip()를 호출한다. -->
        select * from todo order by tno desc limit #{skip},#{size}

    </select>


    <!--         MyBatis는 기본적으로 getXXX, setXXX 를 통해서 동작하므로 , #{skip}는 PageRequestDTO의 getSkip()를 호출한다. -->

    <select id="selectList" resultType="com.ssg.todoservice.domain.TodoVO">
        SELECT * FROM todo
        <include refid="search"/>
        ORDER BY tno DESC
        LIMIT #{skip, jdbcType=INTEGER}, #{size, jdbcType=INTEGER}
    </select>

    <select id="selectOne" resultType="com.ssg.todoservice.domain.TodoVO">
        select * from todo where tno = #{tno}
    </select>

    <insert id="insert">
        insert into todo(title, dueDate, writer) values (#{title}, #{dueDate}, #{writer})
    </insert>

    <delete id="delete">
        delete from todo where tno = #{tno}
    </delete>

    <update id="update" >
        update todo set title = #{title}, dueDate = #{dueDate}, finished = #{finished} where tno = #{tno}
    </update>
<!--    todo테이블의 전체 row의 개수를 반환-->
    <select id="getCount" resultType="int">
        SELECT COUNT(tno) FROM todo
        <include refid="search"/>
    </select>

</mapper>